stages:
  - build
  - test
  - deploy

# Build stage
build-job:
  stage: build
  script:
    - echo "Building project..."

# Test job
test-job:
  image: node:20
  stage: test
  script:
    - npm install
    - npm run lint || echo "Lint issues found but continuing..."

# Deploy job
deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $PRODUCTION_HOST >> ~/.ssh/known_hosts
  script:
    # Make a simple archive of the project
    - tar --exclude='node_modules' --exclude='.git' --exclude='*.tar.gz' -czf app.tar.gz .
    
    # Copy to server and deploy
    - scp -o StrictHostKeyChecking=no app.tar.gz ubuntu@$PRODUCTION_HOST:~/app.tar.gz
    - |
      ssh -o StrictHostKeyChecking=no ubuntu@$PRODUCTION_HOST '
        cd ~
        rm -rf ~/app_temp
        mkdir -p ~/app_temp
        tar -xzf app.tar.gz -C ~/app_temp
        rm -rf ~/app
        mv ~/app_temp ~/app
        cd ~/app
        docker-compose down
        docker-compose build --no-cache
        docker-compose up -d
        docker ps
      '
  only:
    - main
  when: manual